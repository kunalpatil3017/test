unset  AWS_SESSION_TOKEN

temp_role=$(aws sts assume-role --role-arn "arn:aws:iam::713729228264:role/Jenkins_Tool_Access" --role-session-name "client_role_jenkins" --query 'Credentials.[SecretAccessKey,AccessKeyId,SessionToken]' --output text)

# get the aws_secret_access_key
export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | cut -f1 -d ' ')

# get the aws_secret_access_key
export AWS_ACCESS_KEY_ID=$(echo $temp_role | cut -f2 -d ' ')

# get the aws_secret_access_key
export AWS_SESSION_TOKEN=$(echo $temp_role | cut -f3 -d ' ')

env | grep -i AWS_

#Inputs
CustomerPrefix=$1
Region=$2
Environment=$3
AZ=$4

#Values
StackName=$CustomerPrefix"-"$Environment"-"$Region$AZ"-NaclRules-cfs"
command1="aws cloudformation describe-stacks --stack-name $StackName  --query Stacks[].StackName --output text"
stack=$($command1)
#PE Subnet CIDR & NACL ID 
command2="aws ec2 describe-subnets --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"PE"-subnet"" --query Subnets[].CidrBlock --output text"
PE-SUBNETCIDR=$($command2)
echo $PE-SUBNETCIDR
#PE-NACLID=`aws ec2 describe-network-acls --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"PE"-nacl"" --query NetworkAcls[].NetworkAclId --output text` >/dev/null 2>&1

#M-SUBNETCIDR=`aws ec2 describe-subnets --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"M"-subnet"" --query Subnets[].CidrBlock --output text` >/dev/null 2>&1
#M-NACLID=`aws ec2 describe-network-acls --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"M"-nacl"" --query NetworkAcls[].NetworkAclId --output text` >/dev/null 2>&1
#I-SUBNETCIDR=`aws ec2 describe-subnets --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"I"*"" --query 'Subnets[].[CidrBlock,Tags[?Key==\`Name\`].Value[]]' --output text`>/dev/null 2>&1
#I-NACLID=`aws ec2 describe-network-acls --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"I"*""  --query 'NetworkAcls[].[NetworkAclId,Tags[?Key==\`Name\`].Value[]]' --output text` >/dev/null 2>&1
#E-SUBNETCIDR=`aws ec2 describe-subnets --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"E"*"" --query 'Subnets[].[CidrBlock,Tags[?Key==\`Name\`].Value[]]' --output text` >/dev/null 2>&1
#E-NACLID=`aws ec2 describe-network-acls --filters "Name=tag:Name,Values=$CustomerPrefix"_"$Environment"_"$Region$AZ"_"E"*""  --query 'NetworkAcls[].[NetworkAclId,Tags[?Key==\`Name\`].Value[]]' --output text` >/dev/null 2>&1


####condition for create or update stack
#if [ "$stack" = "$StackName" ]; then
#Launch Cloudformation template
#aws cloudformation update-stack --stack-name NaclRules --template-body file://nacl-rules/Naclrules.json --parameters ParameterKey=CustomerPrefix,ParameterValue=$CustomerPrefix ParameterKey=Region,ParameterValue=$Region ParameterKey=Environment,ParameterValue=$Environment ParameterKey=PENACL,ParameterValue='$PE-SUBNETCIDR\,$PE-NACLID' ParameterKey=MNACL,ParameterValue='$M-SUBNETCIDR\,M-NACLID' ParameterKey=ENACL,ParameterValue='$E-SUBNETCIDR| xargs -n 2 | grep -E "ED|EP"\,$E-NACLID | xargs -n 2 | grep -E "ED|EP"\,$E-SUBNETCIDR| xargs -n 2 | grep -E "ET|EA"\,$E-NACLID | xargs -n 2 | grep -E "ET|EA"' ParameterKey=INACL,ParameterValue='$I-SUBNETCIDR| xargs -n 2 | grep -E "ID|IP"\,$I-NACLID | xargs -n 2 | grep -E "ID|IP"\,$I-SUBNETCIDR| xargs -n 2 | grep -E "IT|IA"\,$I-NACLID | xargs -n 2 | grep -E "IT|IA"' --region $Region
#echo " changes in stack $StackName"
#else
#aws cloudformation create-stack --stack-name NaclRules --template-body file://nacl-rules/Naclrules.json --parameters ParameterKey=CustomerPrefix,ParameterValue=$CustomerPrefix ParameterKey=Region,ParameterValue=$Region ParameterKey=Environment,ParameterValue=$Environment ParameterKey=PENACL,ParameterValue='$PE-SUBNETCIDR\,$PE-NACLID' ParameterKey=MNACL,ParameterValue='$M-SUBNETCIDR\,M-NACLID' ParameterKey=ENACL,ParameterValue='$E-SUBNETCIDR| xargs -n 2 | grep -E "ED|EP"\,$E-NACLID | xargs -n 2 | grep -E "ED|EP"\,$E-SUBNETCIDR| xargs -n 2 | grep -E "ET|EA"\,$E-NACLID | xargs -n 2 | grep -E "ET|EA"' ParameterKey=INACL,ParameterValue='$I-SUBNETCIDR| xargs -n 2 | grep -E "ID|IP"\,$I-NACLID | xargs -n 2 | grep -E "ID|IP"\,$I-SUBNETCIDR| xargs -n 2 | grep -E "IT|IA"\,$I-NACLID | xargs -n 2 | grep -E "IT|IA"' --region $Region
#Wait for Template to complete
#aws cloudformation wait stack-create-complete --stack-name $StackName --region $Region
#fi
